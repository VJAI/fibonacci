@use 'sass:color';
@use 'sass:math';
@use 'variables' as fibVars;
@use 'functions' as fibFuncs;
@use 'mixins' as fibMixins;

@include fibMixins.load_google_font($fonts:
  (('Source Serif Pro': ('400', '400i', '600')),
  ('Source Sans Pro': ('400', '400i', '600')),
  ('Amatic SC': ('wght@700')))
);

// Sizes for Mobile Devices.
:root {
  --base-size: #{fibVars.$small-screen-font-size};
  --xs-size: #{fibFuncs.font_size(-2)};
  --sm-size: #{fibFuncs.font_size(-1)};
  --md-size: #{fibFuncs.font_size(0)};
  --lg-size: #{fibFuncs.font_size(3)};
  --xl-size: #{fibFuncs.font_size(6)};
  --xxl-size: #{fibFuncs.font_size(8)};
  font-size: var(--base-size);

  --brand-color: #{fibVars.$brand-color};
  --brand-light: #{fibVars.$brand-light};
  --brand-dark: #{fibVars.$brand-dark};
  --brand-bg: #{fibVars.$brand-bg};
  --brand-gray: #{fibVars.$brand-gray};
  --dark-gray: #{fibVars.$dark-gray};
  --medium-gray: #{fibVars.$medium-gray};
  --gray: #{fibVars.$gray};
  --light-gray: #{fibVars.$light-gray};
  --dim-gray: #{fibVars.$dim-gray};
}

// Sizes for Tablet, Desktop and Large Devices.
@media only screen and (min-width: fibVars.$tablet) {
  :root {
    --base-size: #{fibVars.$large-screen-font-size};
    --xs-size: #{fibFuncs.font_size(-3)};
    --sm-size: #{fibFuncs.font_size(-2)};
    --md-size: #{fibFuncs.font_size(0)};
    --lg-size: #{fibFuncs.font_size(3)};
    --xl-size: #{fibFuncs.font_size(7)};
    --xxl-size: #{fibFuncs.font_size(10)};
  }
}

// Global Overrides.
html, body {
  box-sizing: border-box;
  @include fibMixins.no_spacing;

  font: {
    family: fibVars.$body-font-family;
    size: fibVars.$body-font-size;
  }
  line-height: fibVars.$base-line-height;

  color: fibVars.$dark-gray;
}

// CSS Resets.
*, *:before, *:after {
  box-sizing: inherit;
}

// Paragraphs.
p, .cmp__para {
  margin: {
    top: 0;
    bottom: fibVars.$md-size;
  }

  font-size: fibVars.$body-font-size;
}

// Headings.
h1, .cmp__h1,
h2, .cmp__h2,
h3, .cmp__h3,
h4, .cmp__h4,
h5, .cmp__h5,
h6, .cmp__h6 {
  font-family: fibVars.$heading-font-family;
  line-height: fibVars.$heading-line-height;
  letter-spacing: fibVars.$heading-spacing;

  color: fibVars.$heading-color;

  a:link,
  a:visited,
  a:hover,
  a:focus,
  a:active {
    border-bottom: none;
  }
}

h1, .cmp__h1 {
  margin: {
    top: fibVars.$xl-size;
    bottom: fibVars.$lg-size;
  }

  font-size: fibVars.$h1-font-size;
}

h2, .cmp__h2 {
  margin: {
    top: fibFuncs.font_size(6);
    bottom: fibVars.$md-size;
  }

  font-size: fibVars.$h2-font-size;
}

h3, .cmp__h3 {
  margin: {
    top: fibVars.$lg-size;
    bottom: fibVars.$sm-size;
  }

  font-size: fibVars.$h3-font-size;
}

h4, .cmp__h4 {
  margin: {
    top: fibVars.$lg-size;
    bottom: fibVars.$xs-size;
  }

  font-size: fibVars.$h4-font-size;
}

h5, .cmp__h5 {
  margin: {
    top: fibVars.$lg-size;
    bottom: fibVars.$xs-size;
  }

  font-size: fibVars.$h5-font-size;
  text-transform: uppercase;
  letter-spacing: fibVars.$small-letter-spacing;

  color: fibVars.$gray;
}

h6, .cmp__h6 {
  margin: {
    top: fibVars.$lg-size;
    bottom: fibVars.$xs-size;
  }

  font-size: fibVars.$h6-font-size;
  text-transform: uppercase;
  letter-spacing: fibVars.$small-letter-spacing;

  color: fibVars.$gray;
}

// Links.
a:link,
a:visited,
a:hover,
a:focus,
a:active,
.cmp__link {
  color: inherit;
  border-bottom: dotted 1px;
  text-decoration: none;
  transition: all fibVars.$medium-speed;
}

a:hover, .cmp__link:hover {
  color: fibVars.$brand-color;
  text-shadow: color.adjust(fibVars.$brand-color, $lightness: 30%) 0 0 6px;
}

a:focus-visible {
  outline-color: fibVars.$brand-color;
}

// Lists.
ul,
ol,
menu {
  position: relative;

  padding-left: fibVars.$md-size;
  margin: {
    top: 0;
    bottom: fibVars.$md-size;
  }

  list-style: none;

  color: inherit;

  ul, ol, menu {
    margin-bottom: fibFuncs.font_size(-9);
  }
}

// Un-ordered lists.
ul li:before, menu li:before {
  content: "\25A0";
  position: absolute;
  display: inline-block;
  width: 1em;
  margin-left: -1em;

  font-weight: bold;

  color: fibVars.$brand-color;
}

// Ordered lists.
ol {
  counter-reset: li;
}

ol li:before {
  display: inline-block;
  position: absolute;
  width: fibFuncs.font_size(4, false, em);
  margin-left: fibFuncs.font_size(7, true, em);
  text-align: right;

  font-family: fibVars.$heading-font-family;

  content: counter(li) ".";
  counter-increment: li;
  counter-reset: revert;

  color: inherit;
}

ol li li:before {
  content: counters(li, ".") " ";
}

// Detail Lists.
dl {
  // Title.
  dt {
    @include fibMixins.set_heading_font($font_size: fibVars.$h5-font-size);
    color: fibVars.$medium-gray;
  }

  // Description.
  dd {
    margin-bottom: fibVars.$xs-size;
    margin-inline-start: fibVars.$md-size;
  }
}

// Blockquotes.
blockquote, .cmp__quote {
  --bg-color: #{fibVars.$bquote-bg-color};

  margin: {
    top: fibVars.$lg-size;
    bottom: fibVars.$lg-size;
  }
  padding: {
    top: fibVars.$lg-size;
    right: fibVars.$lg-size;
    bottom: fibVars.$sm-size;
    left: fibVars.$lg-size;
  };

  font-family: fibVars.$bquote-content-font-family;

  color: fibVars.$bquote-color;
  @include fibMixins.config_container(fibVars.$bquote-bg-color);

  &.cmp__icon-float {
    position: relative;
    margin-top: fibVars.$xl-size;
    padding-top: fibVars.$xl-size;
  }

  h4 {
    display: inline-block;
    margin-top: 0;
    font-family: fibVars.$bquote-title-font-family;
    border-bottom: solid 2px;
  }

  p {
    hanging-punctuation: first;
  }

  cite {
    display: block;
    font-size: fibVars.$cite-font-size;
    text-align: right;

    &::before {
      content: 'â€”';
      margin-right: fibFuncs.font_size(-14);
    }
  }
}

// Figures.
figure, .cmp__figure {
  margin-block-start: fibVars.$md-size;
  margin-block-end: fibVars.$lg-size;
  margin-inline-start: 0;
  margin-inline-end: 0;
  max-width: 100%;

  img, iframe {
    display: block;
    max-width: 100%;
    border-radius: fibVars.$border-radius;
    box-shadow: fibVars.$box-shadow;
  }

  table {
    margin: 0;
  }

  iframe {
    width: 100%;
    min-height: fibVars.$iframe-min-height;
    border: none;
  }

  figcaption, .cmp__figcaption {
    margin-top: fibFuncs.font_size(-14);

    font: {
      size: fibVars.$figure-caption-font-size;
      family: fibVars.$figure-caption-font-family;
    }

    color: fibVars.$figure-caption-color;

    code {
      font: {
        size: fibVars.$code-font-size;
        family: fibVars.$code-font-family;
      }
    }
  }

  .cmp__table-wrapper {
    padding: fibVars.$small-padding;
    @include fibMixins.config_container(fibVars.$success);
    overflow-x: auto;
  }

  pre {
    padding: fibVars.$small-padding;
  }
}

// Tables.
table {
  width: 100%;
  margin: {
    top: fibVars.$md-size;
    bottom: fibVars.$lg-size;
  }

  font: {
    size: fibVars.$table-font-size;
    family: fibVars.$table-font-family;
  }

  border-collapse: collapse;
  caption-side: bottom;

  caption {
    font: {
      size: fibVars.$table-caption-font-size;
      family: fibVars.$table-caption-font-family;
    }

    color: fibVars.$table-caption-color;
  }

  td, th {
    line-height: fibVars.$table-line-height;
  }

  thead {
    tr {
      th {
        border-bottom: solid 1px fibVars.$gray;
        text-align: left;
      }
    }
  }
}

// Pre, Code & Var elements
pre {
  margin: 0;
  position: relative;

  color: fibVars.$medium-gray;
  @include fibMixins.config_container(fibVars.$code-bg-color);

  code {
    overflow: {
      x: auto;
      y: hidden;
    };

    font: {
      size: fibVars.$code-font-size;
      family: fibVars.$code-font-family;
    }

    line-height: fibVars.$code-line-height;
    letter-spacing: normal;

    &.hljs {
      padding: 0;
      background: inherit;
      color: inherit;
    }

    &::after {
      @include fibMixins.flex_init($center: true);
      height: fibFuncs.font_size(0);
      position: absolute;
      top: fibFuncs.font_size(-7, true, 'rem');
      right: fibFuncs.font_size(-7);
      padding: 0 fibFuncs.font_size(-14);
      content: attr(data-language);

      font: {
        family: fibVars.$heading-font-family;
        size: fibFuncs.font_size(-4);
      }
      text-transform: uppercase;

      color: fibVars.$white;
      background-color: darken(fibVars.$light-gray, 10%);
      border-radius: fibVars.$border-radius;
      box-shadow: fibVars.$box-shadow;
    }
  }
}

// Highlight.js
.hljs-comment {
  color: fibVars.$hightlight-comment-color;
}

.hljs-punctuation,
.hljs-tag {
  color: fibVars.$hightlight-punc-color;
}

.hljs-tag .hljs-attr,
.hljs-tag .hljs-name {
  color: fibVars.$hightlight-tag-color;
}

.hljs-attribute,
.hljs-doctag,
.hljs-keyword,
.hljs-meta .hljs-keyword,
.hljs-name,
.hljs-selector-tag {
  font-weight: 700;
}

.hljs-deletion,
.hljs-number,
.hljs-quote,
.hljs-selector-class,
.hljs-selector-id,
.hljs-string,
.hljs-template-tag,
.hljs-type {
  color: fibVars.$hightlight-selector-color;
}

.hljs-section,
.hljs-title {
  color: fibVars.$hightlight-section-title-color;
  font-weight: 700;
}

.hljs-link,
.hljs-operator,
.hljs-regexp,
.hljs-selector-attr,
.hljs-selector-pseudo,
.hljs-symbol,
.hljs-template-variable,
.hljs-variable {
  color: fibVars.$hightlight-selector-color;
}

.hljs-literal {
  color: fibVars.$hightlight-literal-color;
}

.hljs-addition,
.hljs-built_in,
.hljs-bullet,
.hljs-code {
  color: fibVars.$hightlight-code-color;
}

.hljs-meta {
  color: fibVars.$hightlight-code-color;
}

.hljs-meta .hljs-string {
  color: fibVars.$hightlight-meta-string-color;
}

.hljs-emphasis {
  font-style: italic;
}

.hljs-strong {
  font-weight: 700;
}

// Variable and keyboard input.
var, kbd, .cmp__code {
  padding: 0 fibFuncs.font_size(-20);

  font: {
    family: fibVars.$code-font-family;
    size: fibVars.$var-font-size;
    style: normal;
  }
  letter-spacing: fibVars.$extra-small-letter-spacing;

  color: fibVars.$var-color;
  background-color: fibVars.$var-bg-color;
  border-radius: fibVars.$border-radius;
}

// Abbr, Acronym.
abbr, acronym, .cmp__acronym {
  letter-spacing: fibVars.$medium-letter-spacing;
  text-transform: uppercase;
  text-decoration: none;

  &:after {
    content: 'â€ ';
    position: relative;
    top: fibFuncs.font_size(-5, true, em);
    font-size: fibVars.$special-char-font-size;
  }
}

// Definition.
dfn {
  font-style: italic;
}

// Superscript & Subscript.
sup, sub {
  font-size: fibVars.$special-char-font-size;
}

// Small.
small, .cmp__small {
  font-size: fibFuncs.font_size(-2);
}

// Very Large text.
.cmp__big-text {
  text-align: center;
  font-size: fibFuncs.font_size(19);
  color: fibVars.$medium-gray;
}

// Datetimes.
time, .cmp__time {
  font: {
    family: fibVars.$time-font-family;
    size: fibVars.$time-font-size;
  }
  letter-spacing: fibVars.$medium-letter-spacing;
  text-transform: uppercase;
}

// Strong, data etc.
strong, data, .cmp__strong {
  font-weight: bold;
}

// Italic.
i, .cmp__italic {
  font-style: italic;
}

// Highlight.
mark, .cmp__mark {
  background-color: fibVars.$mark-bg-color;
}

// Address element.
address {
  font-style: italic;
}

// Horizontal line.
hr {
  height: 1px;
  margin: fibVars.$xxl-size 0;
  position: relative;
  overflow: visible;
  border: 0;
  background: fibVars.$hr-bg;
}

hr:before {
  content: '';
  position: absolute;
  left: calc(50% - #{math.div(fibVars.$hr-separator-size, 2)});
  top: -1 * math.div(fibVars.$hr-separator-size, 2);
  width: fibVars.$hr-separator-size;
  height: fibVars.$hr-separator-size;
  background-color: fibVars.$hr-separator-color;
  transform: rotate(50deg);
}

// Form elements.
// Labels.
label {
  font: {
    family: fibVars.$label-font-family;
    size: fibVars.$label-font-size;
    weight: bold;
  }
  text-transform: uppercase;
  letter-spacing: fibVars.$label-letter-spacing;
  color: fibVars.$label-color;
}

// Input Textboxes and Textareas.
input[type="text"], input[type="email"], input[type="search"], input[type="number"], textarea {
  width: 100%;
  padding: fibVars.$input-padding;

  font: {
    family: fibVars.$input-font-family;
    size: fibVars.$input-font-size;
  }
  line-height: fibVars.$input-line-height;

  border: solid 2px fibVars.$input-border-color;
  border-radius: fibVars.$border-radius;
  color: fibVars.$input-text-color;
  outline: none;

  transition: all fibVars.$medium-speed;
  -webkit-appearance: textfield;

  &:focus, &:active {
    outline: none;
    border-color: fibVars.$brand-color;
  }
}

// Buttons.
button, [type="button"], [type="submit"] {
  @include fibMixins.flex_init($center: true);
  padding: fibVars.$button-padding;

  font: {
    family: fibVars.$button-font-family;
    size: fibVars.$button-font-size;
  }
  text-transform: uppercase;
  letter-spacing: fibVars.$medium-letter-spacing;

  border-radius: fibVars.$border-radius;
  background-image: linear-gradient(45deg, fibVars.$brand-color, fibVars.$brand-dark);
  color: fibVars.$button-text-color;
  border: none;
  cursor: pointer;
  box-shadow: fibVars.$box-shadow;

  transition: all fibVars.$medium-speed;

  &:focus, &:active, &:hover {
    outline: none;
  }

  cmp-icon {
    margin-right: fibFuncs.font_size(-14);
  }

  // Icon buttons.
  &.cmp__icon-button {
    padding: 0;
    background: none;
    box-shadow: none;
    border-radius: 0;
    color: inherit;

    cmp-icon {
      margin-right: 0;
    }

    i {
      display: block;
      align-self: flex-end;
      margin-left: fibFuncs.font_size(-18);
      font-style: normal;
      font-size: fibFuncs.font_size(-5);
      letter-spacing: fibVars.$extra-small-letter-spacing;
    }
  }
}

// Placeholder.
::placeholder {
  color: fibVars.$gray;
  font-style: italic;
}

// Form controls with labels.
.cmp__form-control {
  position: relative;
  @include fibMixins.flex_init($column: true, $align: flex-start);
  margin-bottom: fibVars.$lg-size;
  border-radius: fibVars.$border-radius;

  label {
    @include fibMixins.flex_init($ver: true, $justify: flex-end);
  }
}

// Sub sections.
.cmp__sub {
  --bg-color: #{fibVars.$sub-bg-color};

  margin: {
    top: fibVars.$md-size;
    bottom: fibVars.$lg-size;
  };
  padding: {
    top: fibVars.$lg-size;
    right: fibVars.$lg-size;
    bottom: fibVars.$sm-size;
    left: fibVars.$lg-size;
  };

  font-family: fibVars.$sub-content-font-family;

  @include fibMixins.config_container(fibVars.$sub-bg-color);

  &.cmp__icon-float {
    position: relative;
    margin-top: fibVars.$xl-size;
    padding-top: fibVars.$xl-size;
  }

  h4, h5 {
    font-family: fibVars.$sub-title-font-family;
  }

  h4 {
    margin-top: 0;
  }

  pre {
    background-color: fibVars.$white;
  }
}

// Icons.
cmp-icon {
  @include fibMixins.flex_init($center: true);
  width: fibVars.$icon-size;
  height: fibVars.$icon-size;

  svg {
    fill: currentColor;
    width: inherit;
    height: inherit;

    * {
      pointer-events: none;
    }
  }

  svg:hover *[data-hover-behavior=color] {
    fill: currentColor;
  }

  svg:hover *[data-hover-behavior=white] {
    fill: white;
  }
}

// Icon with text.
.cmp__icon-text {
  @include fibMixins.flex_init($center: true);
  color: inherit;

  cmp-icon {
    margin-right: 0;
  }

  i {
    display: block;
    align-self: flex-end;
    margin-left: fibFuncs.font_size(-18);
    font-family: fibVars.$heading-font-family;
    font-style: normal;
    font-size: fibFuncs.font_size(-5);
    letter-spacing: fibVars.$extra-small-letter-spacing;
  }
}

// Floating icon.
.cmp__icon-container {
  @include fibMixins.flex_init($center: true);
  position: absolute;
  left: fibFuncs.font_size(-6);
  top: calc(-1 * #{fibFuncs.font_size(2)} / 2 - #{fibFuncs.font_size(-6)});
  padding: fibFuncs.font_size(-6);
  @include fibMixins.config_container(var(--bg-color));
  box-shadow: fibVars.$box-shadow;
  border-radius: 50%;
  color: lighten(fibVars.$medium-gray, 10%);

  cmp-icon {
    width: fibFuncs.font_size(2);
    height: fibFuncs.font_size(2);
  }
}

// Content scale.
cmp-content-scale {
  position: relative;
  overflow: hidden;
  height: fibVars.$content-scale-height;
  z-index: fibVars.$content-scale-index;

  .cmp__scroll-progress {
    position: absolute;
    top: 0;
    width: 0;
    height: fibVars.$content-scale-height;
    background-color: fibVars.$scale-progress-bg;
    transition: width fibVars.$medium-speed;
  }
}

// Image Progress.
cmp-image {
  position: relative;
  @include fibMixins.flex_init($center: true);
  background-color: fibVars.$image-bg-color;
  min-height: fibVars.$image-min-height;

  &.cmp__image-loaded {
    cmp-progress, .cmp__image-info {
      display: none !important;
    }
  }

  &.cmp__image-error {
    cmp-progress {
      display: none !important;
    }
  }

  .cmp__image-info {
    @include fibMixins.flex_init($column: true, $center: true);

    cmp-icon[name="image"] {
      color: fibVars.$image-icon-color;
      width: 48px;
      height: 48px;
    }

    .cmp__status-text {
      font-family: fibVars.$image-text-font-family;
      font-size: fibVars.$image-text-font-size;
      color: fibVars.$image-text-color;
    }
  }

  cmp-progress {
    position: absolute;

    &.cmp__first {
      top: fibVars.$lg-size;
    }

    &.cmp__last {
      display: none;
    }
  }

  img {
    transition: filter fibVars.$snail-speed;
  }
}

// Progress.
cmp-progress {
  .cmp__squares-container {
    @include fibMixins.flex_init($ver: true);

    .cmp__square {
      width: fibVars.$progress-square-small-width;
      height: fibVars.$progress-square-small-width;
      background-color: fibVars.$progress-square-bg-color;
      border-radius: fibVars.$progress-square-border-radius;
      animation: color_change 1s linear infinite;

      &:first-child {
        animation-delay: 200ms;
      }

      &:nth-child(2) {
        animation-delay: 400ms;
      }

      &:nth-child(3) {
        animation-delay: 600ms;
      }

      &:nth-child(4) {
        animation-delay: 800ms;
      }

      &:last-child {
        animation-delay: 1s;
      }

      &:not(:last-child) {
        margin-right: fibFuncs.font_size(-14);
      }
    }
  }
}

// Widgets.
.cmp__widget {
  margin-bottom: fibVars.$xl-size;
  @include fibMixins.config_container(fibVars.$widget-bg-color);

  .cmp__widget-header {
    padding-top: fibVars.$md-size;
  }

  .cmp__widget-body {
    padding: fibVars.$small-padding;

    ul, ol, menu {
      margin-bottom: 0;

      li {
        margin-bottom: fibFuncs.font_size(-7);
      }

      &.cmp__inline-list {
        padding-left: 0;

        li {
          display: inline-block;
          margin-right: fibFuncs.font_size(-15);

          &:before {
            display: none;
          }
        }
      }
    }
  }
}

// Cards list.
.cmp__cards-list {
  @include fibMixins.flex_init($wrap: true);
  margin-bottom: fibVars.$xl-size;
  padding: 0 fibVars.$sm-size;

  .cmp__card {
    margin-bottom: fibVars.$xl-size;
  }
}

// Cards.
.cmp__card {
  @include fibMixins.flex_init($column: true);
  box-shadow: fibVars.$box-shadow;
  border-radius: fibVars.$border-radius;
  transition: fibVars.$box-shadow fibVars.$medium-speed;
  text-shadow: none;

  &:hover {
    box-shadow: fibVars.$box-shadow-hover;

    .cmp__card-header {
      .cmp__card-title {
        background-color: rgba(0, 0, 0, 0.1);
      }

      img {
        transform: scale(1.1) rotate(5deg);
      }
    }
  }

  .cmp__card-header {
    display: block;
    overflow: hidden;
    position: relative;
    background-color: fibVars.$card-header-bg;

    .cmp__card-title {
      position: absolute;
      width: 100%;
      height: 100%;
      padding: fibFuncs.font_size(-10);
      background-color: rgba(0, 0, 0, 0.2);
      transition: background-color fibVars.$medium-speed;
      z-index: 10;

      h5 {
        margin: 0;
        color: fibVars.$card-title-color;
        font-size: fibVars.$card-title-font-size;
      }
    }

    img {
      width: 100%;
      height: 100%;
      border-top-left-radius: fibVars.$border-radius;
      border-top-right-radius: fibVars.$border-radius;
      transition: transform fibVars.$medium-speed;
      object-fit: cover;
    }
  }

  .cmp__card-footer {
    padding: fibVars.$sm-size;
    @include fibMixins.flex_init($column: true);
    background: url('#{fibVars.$assets-path}/background.png'), linear-gradient(120deg, fibVars.$white, fibVars.$dim-gray);

    p {
      text-shadow: none;
      margin: 0;

      font: {
        family: fibVars.$card-footer-font-family;
        size: fibVars.$card-footer-font-size;
      }

      color: fibVars.$card-footer-color;
    }

    .cmp__card-actions {
      @include fibMixins.flex_init();
      margin-top: fibVars.$sm-size;

      > * {
        flex-grow: 1;
        text-shadow: none;
        color: fibVars.$card-footer-color;
      }
    }
  }
}

// Status Colors.
.cmp__status-info {
  --bg-color: #{fibVars.$dim-gray};
  background-color: var(--bg-color);
}

.cmp__status-success {
  --bg-color: #{fibVars.$success};
  background-color: var(--bg-color);
}

.cmp__status-warn {
  --bg-color: #{fibVars.$warn};
  background-color: var(--bg-color);
}

.cmp__status-error {
  --bg-color: #{fibVars.$error};
  background-color: var(--bg-color);
}

// Selection Color.
::selection {
  text-shadow: none;
  color: fibVars.$white;
  background: fibVars.$brand-color;
}

// Alignment classes.
.cmp__right {
  text-align: right;
}

.cmp__center {
  text-align: center;
}

// Sticky.
.cmp__sticky {
  position: fixed;
  top: 0;
  width: 100%;
}

// Other Classes.
.cmp__no-transition {
  transition: none !important;
}

// Constants.
$breakpoints: (
        "mob": fibVars.$mobile,
        "tab": fibVars.$tablet,
        "desk": fibVars.$desktop
);

$sizes: (
        "xs": fibVars.$xs-size,
        "sm": fibVars.$sm-size,
        "md": fibVars.$md-size,
        "lg": fibVars.$lg-size,
        "xl": fibVars.$xl-size,
        "xxl": fibVars.$xxl-size
);

$colors: (
        "brand": fibVars.$brand-color,
        "brand-dark": fibVars.$brand-dark,
        "brand-light": fibVars.$brand-light,
        "brand-bg": fibVars.$brand-bg,
        "dark-gray": fibVars.$dark-gray,
        "medium-gray": fibVars.$medium-gray,
        "light-gray": fibVars.$gray,
        "dim-gray": fibVars.$dim-gray,
        "brand-gray": fibVars.$brand-gray,
        "white-color": fibVars.$white,
        "black-color": fibVars.$black,
        "success-color": fibVars.$success,
        "warn-color": fibVars.$warn,
        "error-color": fibVars.$error
);

// Floats & Responsive Floats.
.cmp__float-left {
  float: left;
}

.cmp__float-right {
  float: right;
}

.cmp__float-left:after, .cmp__float-right:after {
  content: '';
  display: block;
  height: 0;
  width: 100%;
  clear: both;
}

.cmp__clear {
  clear: both;
}

@each $name, $breakpoint in $breakpoints {
  @media only screen and (min-width: $breakpoint) {
    .cmp__#{$name}-float-left {
      float: left;
    }

    .cmp__#{$name}-float-right {
      float: right;
    }

    .cmp__#{$name}-float-left:after, .cmp__#{$name}-float-right:after {
      content: '';
      display: block;
      height: 0;
      width: 100%;
      clear: both;
    }

    .cmp__#{$name}-clear {
      clear: both;
    }
  }
}

// Responsive paddings and margins.
.cmp__no-margin {
  margin: 0;
}

.cmp__no-pad {
  padding: 0;
}

@each $name, $size in $sizes {

  // Paddings.
  .cmp__pad-#{$name} {
    padding: #{$size};
  }

  .cmp__pad-hor-#{$name} {
    padding-left: #{$size};
    padding-right: #{$size};
  }

  .cmp__pad-ver-#{$name} {
    padding-top: #{$size};
    padding-bottom: #{$size};
  }

  .cmp__pad-left-#{$name} {
    padding-left: #{$size};
  }

  .cmp__pad-right-#{$name} {
    padding-right: #{$size};
  }

  .cmp__pad-top-#{$name} {
    padding-top: #{$size};
  }

  .cmp__pad-bottom-#{$name} {
    padding-bottom: #{$size};
  }

  // Margins.
  .cmp__mar-#{$name} {
    margin: #{$size};
  }

  .cmp__mar-hor-#{$name} {
    margin-left: #{$size};
    margin-right: #{$size};
  }

  .cmp__mar-ver-#{$name} {
    margin-top: #{$size};
    margin-bottom: #{$size};
  }

  .cmp__mar-left-#{$name} {
    margin-left: #{$size};
  }

  .cmp__mar-right-#{$name} {
    margin-right: #{$size};
  }

  .cmp__mar-top-#{$name} {
    margin-top: #{$size};
  }

  .cmp__mar-bottom-#{$name} {
    margin-bottom: #{$size};
  }
}

@each $breakpointname, $breakpoint in $breakpoints {
  @media only screen and (min-width: $breakpoint) {
    .cmp__#{$breakpointname}-no-margin {
      margin: 0;
    }

    .cmp__#{$breakpointname}-no-pad {
      padding: 0;
    }

    @each $name, $size in $sizes {

      // Paddings.
      .cmp__#{$breakpointname}-pad-#{$name} {
        padding: #{$size};
      }

      .cmp__#{$breakpointname}-pad-hor-#{$name} {
        padding-left: #{$size};
        padding-right: #{$size};
      }

      .cmp__#{$breakpointname}-pad-ver-#{$name} {
        padding-top: #{$size};
        padding-bottom: #{$size};
      }

      .cmp__#{$breakpointname}-pad-left-#{$name} {
        padding-left: #{$size};
      }

      .cmp__#{$breakpointname}-pad-right-#{$name} {
        padding-right: #{$size};
      }

      .cmp__#{$breakpointname}-pad-top-#{$name} {
        padding-top: #{$size};
      }

      .cmp__#{$breakpointname}-pad-bottom-#{$name} {
        padding-bottom: #{$size};
      }

      // Margins.
      .cmp__#{$breakpointname}-mar-#{$name} {
        margin: #{$size};
      }

      .cmp__#{$breakpointname}-mar-hor-#{$name} {
        margin-left: #{$size};
        margin-right: #{$size};
      }

      .cmp__#{$breakpointname}-mar-ver-#{$name} {
        margin-top: #{$size};
        margin-bottom: #{$size};
      }

      .cmp__#{$breakpointname}-mar-left-#{$name} {
        margin-left: #{$size};
      }

      .cmp__#{$breakpointname}-mar-right-#{$name} {
        margin-right: #{$size};
      }

      .cmp__#{$breakpointname}-mar-top-#{$name} {
        margin-top: #{$size};
      }

      .cmp__#{$breakpointname}-mar-bottom-#{$name} {
        margin-bottom: #{$size};
      }
    }
  }
}

// Color Classes.
@each $name, $color in $sizes {
  .cmp__#{$name}-color {
    color: $color;
  }

  .cmp__#{$name}-color-bg {
    background-color: $color;
  }
}

// Media Queries.
@media only screen and (min-width: fibVars.$tablet) {
  // Lists.
  ul,
  ol,
  menu {
    padding-left: 0;

    ul,
    ol,
    menu {
      padding-left: fibVars.$md-size;
    }
  }

  // Form Controls.
  .cmp__form-control {
    @include fibMixins.flex_update($column: false, $align: center);
    background-color: fibVars.$form-control-bg-color;

    label {
      min-width: fibFuncs.font_size(19);
      margin-right: fibVars.$sm-size;
    }
  }

  // Lazy Loading Images.
  cmp-image {
    cmp-progress {
      &.cmp__last {
        display: block;
      }
    }

    .cmp__image-info {
      cmp-icon[name="image"] {
        width: 80px;
        height: 80px;
      }
    }

    cmp-progress {
      &.cmp__first {
        top: 20%;
      }

      &.cmp__last {
        bottom: 20%;
      }
    }
  }

  // Progress bars.
  cmp-progress {
    .cmp__squares-container {
      .cmp__square {
        width: fibVars.$progress-square-large-width;
        height: fibVars.$progress-square-large-width;
      }
    }
  }

  // Widget.
  .cmp__widget {
    .cmp__widget-body {
      padding: fibVars.$medium-padding;
    }
  }

  // Cards List.
  .cmp__cards-list {
    justify-content: space-between;

    .cmp__card {
      width: calc(50% - #{fibVars.$md-size});
    }
  }
}

@keyframes color_change {
  0% {
    background-color: fibVars.$progress-square-bg-color;
  }
  10% {
    background-color: fibVars.$progress-square-bg-color2;
  }
  20% {
    background-color: fibVars.$progress-square-bg-color;
  }
  100% {
    background-color: fibVars.$progress-square-bg-color;
  }
}