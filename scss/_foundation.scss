@import url('https://fonts.googleapis.com/css?family=Source+Serif+Pro:400,400i,600|Source+Sans+Pro:400,400i,600|Amatic+SC:wght@700');
@import '../assets/sprite';

/**
  Sizes built with golden ratio (1.618) with the interval of 5.
  Font Size Calculator: https://gist.github.com/VJAI/f4240f0353bf992d967f52f74844d963

  const base = 19;
  const ratio = 1.618;
  const interval = 5;

  function size(point) {
    const s = base * Math.pow(ratio, point/interval);
    return [s, `${(s / base).toFixed(3)} rem`];
  }

  for (let i = -20; i < 20; i++) {
    console.log(size(i));
  }

  0.146 0.161 0.177 0.195 0.214 0.236 0.260 0.286 0.315 0.347
  0.382 0.421 0.463 0.510 0.561 0.618 0.680 0.749 0.825 0.908
  1.000 1.101 1.212 1.335 1.470 1.618 1.781 1.961 2.160 2.378
  2.618 2.882 3.174 3.494 3.847 4.236 4.664 5.135 5.654 6.225
 */

// Sizes for Mobile Devices.
:root {
  --base-size: 16px;
  --xs-size: 0.825rem;
  --sm-size: 0.908rem;
  --md-size: 1rem;
  --lg-size: 1.335rem;
  --xl-size: 1.961rem;
  --xxl-size: 2.378rem;
  --xxxl-size: 2.882rem;
  font-size: var(--base-size);
}

// Sizes for Tablet, Desktop and Large Devices.
@media only screen and (min-width: $tablet) {
  :root {
    --base-size: 19px;
    --xs-size: 0.749rem;
    --sm-size: 0.825rem;
    --md-size: 1rem;
    --lg-size: 1.335rem;
    --xl-size: 2.160rem;
    --xxl-size: 3.494rem;
    --xxxl-size: 4.664rem;
  }
}

// Global Overrides.
html, body {
  box-sizing: border-box;

  margin: 0;
  padding: 0;

  font-family: $body-font-family;
  font-size: $body-font-size;
  line-height: $base-line-height;

  color: $dark-gray;
}

// CSS Resets.
*, *:before, *:after {
  box-sizing: inherit;
}

// Paragraphs.
p, .cmp__para {
  margin-top: 0;
  margin-bottom: $md-size;

  font-size: $body-font-size;
}

// Headings.
h1, .cmp__h1,
h2, .cmp__h2,
h3, .cmp__h3,
h4, .cmp__h4,
h5, .cmp__h5,
h6, .cmp__h6 {
  font-family: $heading-font-family;
  line-height: $heading-line-height;
  letter-spacing: $heading-spacing;

  color: $heading-color;

  a:link,
  a:visited,
  a:hover,
  a:focus,
  a:active {
    border-bottom: none;
  }
}

h1, .cmp__h1 {
  position: relative;
  margin-top: $xl-size;
  margin-bottom: $xxxl-size;

  font-size: $h1-font-size;

  color: $brand-color;

  &::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: calc($h1-border-width + 5px);
    width: 8px;
    height: 8px;
    background-color: $blue-gray;
    border-radius: 50%;
    transition: left $fast-speed;
  }

  &::after {
    display: block;
    content: '';
    width: $h1-border-width;
    height: $h1-border-height;
    margin-top: $xl-size;
    background-color: $blue-gray;
    border-radius: $border-radius;
  }

  &:hover::before {
    left: calc($h1-border-width + 10px);
  }
}

h2, .cmp__h2 {
  margin-top: 1.781rem;
  margin-bottom: $md-size;

  font-size: $h2-font-size;
}

h3, .cmp__h3 {
  margin-top: $lg-size;
  margin-bottom: $sm-size;

  font-size: $h3-font-size;
}

h4, .cmp__h4 {
  margin-top: $lg-size;
  margin-bottom: $xs-size;

  font-size: $h4-font-size;
}

h5, .cmp__h5 {
  margin-bottom: $xs-size;
  font-size: $h5-font-size;
}

h6, .cmp__h6 {
  margin-bottom: $xs-size;
  font-size: $small-font-size;
}

// Links.
a:link,
a:visited,
a:hover,
a:focus,
a:active,
.cmp__link {
  color: inherit;
  border-bottom: dotted 1px;
  text-decoration: none;
  transition: all $medium-speed;
}

a:hover, .cmp__link:hover {
  color: $brand-color;
}

a:focus-visible {
  outline-color: $brand-color;
}

// Lists.
ul,
ol,
menu {
  position: relative;

  padding-left: $md-size;
  margin-top: 0;
  margin-bottom: $md-size;

  list-style: none;

  color: inherit;

  ul, ol, menu {
    margin-bottom: 0.421rem;
  }
}

// Un-ordered lists.
ul li:before, menu li:before {
  content: "\25A0";
  position: absolute;
  display: inline-block;
  width: 1em;
  margin-left: -1em;

  font-weight: bold;

  color: $brand-color;
}

// Ordered lists.
ol {
  counter-reset: li;
}

ol li:before {
  display: inline-block;
  position: absolute;
  width: 1.470em;
  margin-left: -1.961em;
  text-align: right;

  font-family: $heading-font-family;

  content: counter(li) ".";
  counter-increment: li;
  counter-reset: revert;

  color: inherit;
}

ol li li:before {
  content: counters(li, ".") " ";
}

// Detail Lists.
dl {
  // Title.
  dt {
    font-family: $heading-font-family;
    font-size: $h5-font-size;
    letter-spacing: $medium-letter-spacing;
    text-transform: uppercase;
    color: $medium-gray;
  }

  // Description.
  dd {
    margin-bottom: $xs-size;
    margin-inline-start: $md-size;
  }
}

// Blockquotes.
blockquote {
  margin-top: $md-size;
  margin-bottom: $lg-size;

  font-family: $bquote-content-font-family;

  background-color: $bquote-bg-color;
  color: $bquote-color;
  border-radius: $border-radius;
  box-shadow: $box-shadow;

  h1, h2, h3, h4, h5 {
    display: inline-block;
    font-family: $bquote-title-font-family;
    border-bottom: solid 2px;
  }

  p {
    font-size: $md-size;
    hanging-punctuation: first;

    &:last-of-type {
      margin-bottom: 0;
    }
  }

  cite {
    display: block;
    font-size: $cite-font-size;
    text-align: right;

    &::before {
      content: '—';
      margin-right: 0.26rem;
    }
  }
}

// Figures.
figure {
  margin-block-start: $md-size;
  margin-block-end: $lg-size;
  margin-inline-start: 0;
  margin-inline-end: 0;

  img {
    display: block;
    width: 100%;
    border-radius: $border-radius;
    box-shadow: $box-shadow;
  }

  cmp-image {
    border-radius: $border-radius;
  }

  table {
    margin: 0;
  }

  figcaption {
    margin-top: 0.26rem;
    font-size: $figure-caption-font-size;
    font-family: $figure-caption-font-family;
    color: $figure-caption-color;

    code {
      font-family: $code-font-family;
      font-size: $code-font-size;
    }
  }

  .cmp__table-wrapper {
    padding: $small-padding;
    background-color: $success;
    border-radius: $border-radius;
    box-shadow: $box-shadow;
    overflow-x: auto;
  }

  pre {
    padding: $small-padding;
  }
}

// Tables.
table {
  width: 100%;
  margin-top: $md-size;
  margin-bottom: $lg-size;

  font-size: $table-font-size;
  font-family: $table-font-family;

  border-collapse: collapse;
  caption-side: bottom;

  caption {
    font-size: $table-caption-font-size;
    font-family: $table-caption-font-family;
    color: $table-caption-color;
  }

  td, th {
    line-height: $table-line-height;
  }

  thead {
    tr {
      th {
        border-bottom: solid 1px $gray;
        text-align: left;
      }
    }
  }
}

// Pre, Code & Var elements
pre {
  margin: 0;
  position: relative;

  background: $code-bg-color;
  color: $medium-gray;
  border-radius: $border-radius;
  box-shadow: $box-shadow;

  code {
    overflow-x: auto;
    overflow-y: hidden;

    font-family: $code-font-family;
    font-size: $code-font-size;
    line-height: $code-line-height;
    letter-spacing: normal;

    &.hljs {
      padding: 0;
      background: inherit;
      color: inherit;
    }

    &::after {
      @include flex_center;
      height: 1rem;
      position: absolute;
      top: -0.5rem;
      right: 0.5rem;
      padding: 0 0.26rem;
      content: attr(data-language);

      font-family: $heading-font-family;
      font-size: 0.680rem;
      text-transform: uppercase;

      color: $white;
      background-color: darken($light-gray, 10%);
      border-radius: $border-radius;
      box-shadow: $box-shadow;
    }
  }
}

// Highlight.js
.hljs-comment {
  color: $hightlight-comment-color;
}

.hljs-punctuation,
.hljs-tag {
  color: $hightlight-punc-color;
}

.hljs-tag .hljs-attr,
.hljs-tag .hljs-name {
  color: $hightlight-tag-color;
}

.hljs-attribute,
.hljs-doctag,
.hljs-keyword,
.hljs-meta .hljs-keyword,
.hljs-name,
.hljs-selector-tag {
  font-weight: 700;
}

.hljs-deletion,
.hljs-number,
.hljs-quote,
.hljs-selector-class,
.hljs-selector-id,
.hljs-string,
.hljs-template-tag,
.hljs-type {
  color: $hightlight-selector-color;
}

.hljs-section,
.hljs-title {
  color: $hightlight-section-title-color;
  font-weight: 700;
}

.hljs-link,
.hljs-operator,
.hljs-regexp,
.hljs-selector-attr,
.hljs-selector-pseudo,
.hljs-symbol,
.hljs-template-variable,
.hljs-variable {
  color: $hightlight-selector-color;
}

.hljs-literal {
  color: $hightlight-literal-color;
}

.hljs-addition,
.hljs-built_in,
.hljs-bullet,
.hljs-code {
  color: $hightlight-code-color;
}

.hljs-meta {
  color: $hightlight-code-color;
}

.hljs-meta .hljs-string {
  color: $hightlight-meta-string-color;
}

.hljs-emphasis {
  font-style: italic;
}

.hljs-strong {
  font-weight: 700;
}

var, kbd {
  padding: 0 0.146rem;

  font-family: $code-font-family;
  font-size: $var-font-size;
  font-style: normal;
  letter-spacing: $extra-small-letter-spacing;

  color: $var-color;
  background-color: $var-bg-color;
  border-radius: $border-radius;
}

// Abbr, Acronym.
abbr, acronym {
  letter-spacing: $medium-letter-spacing;
  text-transform: uppercase;
  text-decoration: none;

  &:after {
    content: '†';
    position: relative;
    top: -0.618em;
    font-size: $special-char-font-size;
  }
}

// Definition.
dfn {
  font-style: italic;
}

// Superscript & Subscript.
sup, sub {
  font-size: $special-char-font-size;
}

// Small.
small {
  font-size: 0.825rem;
}

// Datetimes.
time {
  font-family: $time-font-family;
  font-size: $time-font-size;
  letter-spacing: $medium-letter-spacing;
  text-transform: uppercase;
}

// Strong, data etc.
strong, data {
  font-weight: bold;
}

// Italic.
i {
  font-style: italic;
}

// Highlight.
mark {
  background-color: $mark-bg-color;
}

// Address element.
address {
  font-style: italic;
}

// Horizontal line.
hr {
  height: 1px;
  margin: $xxl-size 0;
  position: relative;
  overflow: visible;
  border: 0;
  background: $hr-bg;
}

hr:before {
  content: '';
  position: absolute;
  left: calc(50% - 5px);
  top: -5px;
  width: 10px;
  height: 10px;
  background-color: $hr-separator-color;
  transform: rotate(50deg);
}

// Form elements.
// Labels.
label {
  font-family: $label-font-family;
  font-size: $label-font-size;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: $label-letter-spacing;
  color: $medium-gray;
}

// Input Textboxes and Textareas.
input[type="text"], input[type="email"], input[type="search"], textarea {
  width: 100%;
  padding: $input-padding;

  font-family: $input-font-family;
  font-size: $input-font-size;
  line-height: $input-line-height;


  border: solid 2px $input-border-color;
  border-radius: $border-radius;
  color: $input-text-color;
  outline: none;

  transition: all $medium-speed;
  -webkit-appearance: textfield;

  &:focus, &:active {
    outline: none;
    border-color: $brand-color;
  }
}

// Buttons.
button, [type="button"], [type="submit"] {
  @include flex-ver-center;
  padding: $button-padding;

  font-family: $button-font-family;
  font-size: $button-font-size;
  text-transform: uppercase;
  letter-spacing: $medium-letter-spacing;

  border-radius: $border-radius;
  background-color: $button-bg-color;
  color: $button-text-color;
  border: none;
  cursor: pointer;
  box-shadow: $box-shadow;

  transition: all $medium-speed;

  &:focus, &:active, &:hover {
    background-color: $brand-dark;
    outline: none;
  }

  cmp-icon {
    margin-right: 0.26rem;
  }
}

/* clears the 'X' from Internet Explorer */
input[type=search]::-ms-clear {
  display: none;
  width: 0;
  height: 0;
}

input[type=search]::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

/* clears the 'X' from Chrome */
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

// Placeholder.
::placeholder {
  color: $gray;
  font-style: italic;
}

// Form controls with labels.
.cmp__form-control {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  margin-bottom: $lg-size;
  border-radius: $border-radius;

  label {
    @include flex-ver-center;
    justify-content: flex-end;
  }
}

// Icons.
cmp-icon {
  width: 16px;
  height: 16px;

  > * {
    width: inherit;
    height: inherit;

    svg {
      fill: currentColor;
      width: inherit;
      height: inherit;

      * {
        pointer-events: none;
      }
    }

    svg:hover *[data-hover-behavior=color] {
      fill: currentColor;
    }

    svg:hover *[data-hover-behavior=white] {
      fill: white;
    }
  }
}

// Content scale.
cmp-content-scale {
  position: relative;
  overflow: hidden;
  z-index: $content-scale-index;

  .cmp__bar {
    width: 100%;
    height: $content-scale-height;
    background-color: $content-scale-bg;
  }

  .cmp__ticks-container {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;

    .cmp__tick {
      flex-grow: 1;
      height: $tick-max-height;
      border-right: solid 1px $tick-color;

      .cmp__tick {
        height: $tick-min-height;
      }

      &:nth-child(10) {
        border-right: none;
      }
    }
  }

  .cmp__scroll-progress {
    position: absolute;
    top: 0;
    width: 0;
    height: $content-scale-height;
    background-color: $scale-progress-bg;
    transition: width $medium-speed;

    &::after {
      content: "";
      position: absolute;
      overflow: hidden;
      top: -5px;
      right: 0;
      width: 16px;
      height: 8px;
      background-color: $scale-progress-bg;
      transform: rotate(15deg);
      border-radius: 5px;
      box-shadow: 2px 1px 3px $scale-progress-bg-shadow;
    }
  }
}

// Color dots.
cmp-color-dots {
  .cmp__dots-container {
    display: flex;
    flex-direction: column;

    .cmp__dot {
      width: 10px;
      height: 10px;
      background-color: $brand-color;
      margin-bottom: 3px;

      &:nth-child(1) {
        background-color: #44a6d4;
      }

      &:nth-child(3) {
        background-color: #eded3e;
      }

      &:nth-child(4) {
        background-color: $dark-gray;
      }
    }
  }
}

// Ribbon.
.cmp__ribbon {
  --ribbon-height: #{$ribbon-small-screen-height};
  --ribbon-bend-height: calc(var(--ribbon-height) / 3.75);
  display: inline-block;
  position: relative;
  height: var(--ribbon-height);
  line-height: var(--ribbon-height);
  padding: 0 $xl-size;

  text-align: center;
  text-transform: uppercase;
  font-family: $heading-font-family;
  font-size: 0.680rem;
  letter-spacing: $medium-letter-spacing;

  background: $ribbon-bg;
  color: $ribbon-color;
  box-shadow: $ribbon-shadow;

  &::before, &::after {
    content: "";
    position: absolute;
    border: solid calc(var(--ribbon-height) / 2) darken($purple-ribbon, 10%);
    z-index: -1;
    bottom: calc(-1 * var(--ribbon-bend-height));
  }

  &::before {
    left: calc(-1 * calc(var(--ribbon-height) - var(--ribbon-bend-height)));
    border-left-color: transparent;
  }

  &::after {
    right: calc(-1 * calc(var(--ribbon-height) - var(--ribbon-bend-height)));
    border-right-color: transparent;
  }

  .cmp__ribbon-content {
    &::before, &::after {
      content: "";
      position: absolute;
      display: block;
      bottom: calc(-1 * var(--ribbon-bend-height));
      border-style: solid;
      border-color: darken($purple-ribbon, 25%) transparent transparent transparent;
    }

    &::before {
      left: 0;
      border-width: var(--ribbon-bend-height) 0 0 var(--ribbon-bend-height);
    }

    &::after {
      right: 0;
      border-width: var(--ribbon-bend-height) var(--ribbon-bend-height) 0 0;
    }
  }
}

// Widget Ribbon.
.cmp__widget-ribbon {
  display: inline-block;
  min-width: 150px;

  .cmp__widget-ribbon-content {
    display: flex;
    width: 100%;
    position: relative;
    left: -6px;
    height: $widget-ribbon-height;
    line-height: $widget-ribbon-height;
    padding-left: $md-size;

    font-family: $heading-font-family;
    font-size: $small-font-size;
    letter-spacing: $medium-letter-spacing;
    text-transform: uppercase;
    font-weight: bold;

    background-color: $widget-ribbon-bg;
    color: $widget-ribbon-color;

    &::before {
      content: '';
      position: absolute;
      top: -6px;
      left: 0;
      height: 3px;

      border: solid 3px darken($widget-ribbon-bg, 20%);
      border-left-color: transparent;
      border-top-color: transparent;
    }

    &::after {
      content: '';
      position: relative;
      right: calc(-1 * $xl-size);
      height: $xl-size;

      border: calc($xl-size / 2) solid $widget-ribbon-bg;
      border-top-color: transparent;
      border-right-color: transparent;
      border-bottom-color: transparent;
    }

    span {
      flex-grow: 1;
    }
  }
}

// Image Progress.
cmp-image {
  position: relative;
  @include flex-center;
  background-color: $image-bg-color;
  min-height: $image-min-height;

  &.cmp__image-loaded {
    cmp-progress, .cmp__image-info {
      display: none;
    }
  }

  &.cmp__image-error {
    cmp-progress {
      display: none;
    }
  }

  .cmp__image-info {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    cmp-icon[name="image"] {
      color: $image-icon-color;
      width: 48px;
      height: 48px;
    }

    .cmp__status-text {
      font-family: $image-text-font-family;
      font-size: $image-text-font-size;
      color: $image-text-color;
    }
  }

  cmp-progress {
    position: absolute;

    &.cmp__first {
      top: $lg-size;
    }

    &.cmp__last {
      display: none;
    }
  }

  img {
    transition: filter $snail-speed;
  }
}

// Progress.
cmp-progress {
  .cmp__squares-container {
    display: flex;
    flex-direction: row;
    align-items: center;

    .cmp__square {
      width: $progress-square-small-width;
      height: $progress-square-small-width;
      background-color: $progress-square-bg-color;
      border-radius: $progress-square-border-radius;
      animation: color_change 1s linear infinite;

      &:first-child {
        animation-delay: 200ms;
      }

      &:nth-child(2) {
        animation-delay: 400ms;
      }

      &:nth-child(3) {
        animation-delay: 600ms;
      }

      &:nth-child(4) {
        animation-delay: 800ms;
      }

      &:last-child {
        animation-delay: 1s;
      }

      &:not(:last-child) {
        margin-right: 0.26rem;
      }
    }
  }
}

// Simple decorative element.
cmp-words-fall {
  position: relative;
  display: block;
  overflow: hidden;

  .cmp__word {
    white-space: nowrap;
    position: absolute;
    animation: falling_word 4s linear;
    color: $purple-ribbon;
    font-family: $display-font-family;
    letter-spacing: -1px;
    user-select: none;
  }
}

// Widgets.
.cmp__widget {
  margin-bottom: $xl-size;
  background-color: $widget-bg-color;
  border-radius: $border-radius;
  box-shadow: $box-shadow;

  .cmp__widget-header {
    padding-top: $md-size;
  }

  .cmp__widget-body {
    padding: $small-padding;

    ul, ol, menu {
      margin-bottom: 0;

      li {
        margin-bottom: 0.510rem;
      }

      &.cmp__inline-list {
        padding-left: 0;

        li {
          display: inline-block;
          margin-right: 0.236rem;

          &:before {
            display: none;
          }
        }
      }
    }
  }
}

// Status Colors.
.cmp__status-success {
  background-color: $success;
}

.cmp__status-warn {
  background-color: $warn;
}

.cmp__status-error {
  background-color: $error;
}

// Selection Color.
::selection {
  text-shadow: none;
  color: $white;
  background: $brand-color;
}

// Alignment classes.
.cmp__right {
  text-align: right;
}

.cmp__center {
  text-align: center;
}

// Sticky.
.cmp__sticky {
  position: fixed;
  top: 0;
  width: 100%;
}

// Other Classes.
.cmp__no-transition {
  transition: none !important;
}

// Constants.
$breakpoints: (
        "mob": $mobile,
        "tab": $tablet,
        "desk": $desktop
);

$sizes: (
        "xs": $xs-size,
        "sm": $sm-size,
        "md": $md-size,
        "lg": $lg-size,
        "xl": $xl-size,
        "xxl": $xxl-size,
        "xxxl": $xxxl-size
);

$colors: (
        "brand": $brand-color,
        "brand-dark": $brand-dark,
        "brand-light": $brand-light,
        "dark-gray": $dark-gray,
        "medium-gray": $medium-gray,
        "light-gray": $gray,
        "dim-gray": $dim-gray,
        "blue-gray": $blue-gray,
        "white-color": $white,
        "black-color": $black,
        "success-color": $success,
        "warn-color": $warn,
        "error-color": $error
);

// Floats & Responsive Floats.
.cmp__float-left {
  float: left;
}

.cmp__float-right {
  float: right;
}

.cmp__float-left:after, .cmp__float-right:after {
  content: '';
  display: block;
  height: 0;
  width: 100%;
  clear: both;
}

.cmp__clear {
  clear: both;
}

@each $name, $breakpoint in $breakpoints {
  @media only screen and (min-width: $breakpoint) {
    .cmp__#{$name}-float-left {
      float: left;
    }

    .cmp__#{$name}-float-right {
      float: right;
    }

    .cmp__#{$name}-float-left:after, .cmp__#{$name}-float-right:after {
      content: '';
      display: block;
      height: 0;
      width: 100%;
      clear: both;
    }

    .cmp__#{$name}-clear {
      clear: both;
    }
  }
}

// Responsive paddings and margins.
.cmp__no-margin {
  margin: 0;
}

.cmp__no-pad {
  padding: 0;
}

@each $name, $size in $sizes {

  // Paddings.
  .cmp__pad-#{$name} {
    padding: #{$size};
  }

  .cmp__pad-hor-#{$name} {
    padding-left: #{$size};
    padding-right: #{$size};
  }

  .cmp__pad-ver-#{$name} {
    padding-top: #{$size};
    padding-bottom: #{$size};
  }

  .cmp__pad-left-#{$name} {
    padding-left: #{$size};
  }

  .cmp__pad-right-#{$name} {
    padding-right: #{$size};
  }

  .cmp__pad-top-#{$name} {
    padding-top: #{$size};
  }

  .cmp__pad-bottom-#{$name} {
    padding-bottom: #{$size};
  }

  // Margins.
  .cmp__mar-#{$name} {
    margin: #{$size};
  }

  .cmp__mar-hor-#{$name} {
    margin-left: #{$size};
    margin-right: #{$size};
  }

  .cmp__mar-ver-#{$name} {
    margin-top: #{$size};
    margin-bottom: #{$size};
  }

  .cmp__mar-left-#{$name} {
    margin-left: #{$size};
  }

  .cmp__mar-right-#{$name} {
    margin-right: #{$size};
  }

  .cmp__mar-top-#{$name} {
    margin-top: #{$size};
  }

  .cmp__mar-bottom-#{$name} {
    margin-bottom: #{$size};
  }
}

@each $breakpointname, $breakpoint in $breakpoints {
  @media only screen and (min-width: $breakpoint) {
    .cmp__#{$breakpointname}-no-margin {
      margin: 0;
    }

    .cmp__#{$breakpointname}-no-pad {
      padding: 0;
    }

    @each $name, $size in $sizes {

      // Paddings.
      .cmp__#{$breakpointname}-pad-#{$name} {
        padding: #{$size};
      }

      .cmp__#{$breakpointname}-pad-hor-#{$name} {
        padding-left: #{$size};
        padding-right: #{$size};
      }

      .cmp__#{$breakpointname}-pad-ver-#{$name} {
        padding-top: #{$size};
        padding-bottom: #{$size};
      }

      .cmp__#{$breakpointname}-pad-left-#{$name} {
        padding-left: #{$size};
      }

      .cmp__#{$breakpointname}-pad-right-#{$name} {
        padding-right: #{$size};
      }

      .cmp__#{$breakpointname}-pad-top-#{$name} {
        padding-top: #{$size};
      }

      .cmp__#{$breakpointname}-pad-bottom-#{$name} {
        padding-bottom: #{$size};
      }

      // Margins.
      .cmp__#{$breakpointname}-mar-#{$name} {
        margin: #{$size};
      }

      .cmp__#{$breakpointname}-mar-hor-#{$name} {
        margin-left: #{$size};
        margin-right: #{$size};
      }

      .cmp__#{$breakpointname}-mar-ver-#{$name} {
        margin-top: #{$size};
        margin-bottom: #{$size};
      }

      .cmp__#{$breakpointname}-mar-left-#{$name} {
        margin-left: #{$size};
      }

      .cmp__#{$breakpointname}-mar-right-#{$name} {
        margin-right: #{$size};
      }

      .cmp__#{$breakpointname}-mar-top-#{$name} {
        margin-top: #{$size};
      }

      .cmp__#{$breakpointname}-mar-bottom-#{$name} {
        margin-bottom: #{$size};
      }
    }
  }
}

// Color Classes.
@each $name, $color in $sizes {
  .cmp__#{$name}-color {
    color: $color;
  }

  .cmp__#{$name}-color-bg {
    background-color: $color;
  }
}

// Responsive Layouts.
.cmp__flex {
  display: flex;
  flex-direction: row;
}

.cmp__flex-column {
  display: flex;
  flex-direction: column;
}

@each $breakpointname, $breakpoint in $breakpoints {
  .cmp__#{$breakpointname}-flex {
    display: flex;
    flex-direction: row;
  }

  .cmp__#{$breakpointname}-flex-column {
    display: flex;
    flex-direction: column;
  }
}

// Media Queries.
@media only screen and (min-width: $tablet) {
  ul,
  ol,
  menu {
    padding-left: 0;

    ul,
    ol,
    menu {
      padding-left: $md-size;
    }
  }

  .cmp__form-control {
    flex-direction: row;
    align-items: center;
    background-color: $form-control-bg-color;

    label {
      min-width: 6.225rem;
      margin-right: $sm-size;
    }
  }

  cmp-image {
    .cmp__image-info {
      cmp-icon[name="image"] {
        width: 80px;
        height: 80px;
      }
    }

    cmp-progress {
      &.cmp__first {
        top: 20%;
      }

      &.cmp__last {
        display: block;
        bottom: 20%;
      }
    }
  }

  cmp-progress {
    .cmp__squares-container {
      .cmp__square {
        width: $progress-square-large-width;
        height: $progress-square-large-width;
      }
    }
  }

  .cmp__widget {
    .cmp__widget-body {
      padding: $medium-padding;
    }
  }

  .cmp__ribbon {
    --ribbon-height: #{$ribbon-height};
    font-size: $small-font-size;
  }

  .cmp__widget-ribbon {
    min-width: 200px;
  }
}

@keyframes color_change {
  0% {
    background-color: $progress-square-bg-color;
  }
  10% {
    background-color: $progress-square-bg-color2;
  }
  20% {
    background-color: $progress-square-bg-color;
  }
  100% {
    background-color: $progress-square-bg-color;
  }
}

@keyframes falling_word {
  0% {
    top: 0;
    opacity: 0.5;
  }

  10% {
    opacity: 0.9;
  }

  100% {
    top: calc(3.847rem + $xl-size);
    opacity: 0;
  }
}